// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resp_message.proto

#ifndef PROTOBUF_resp_5fmessage_2eproto__INCLUDED
#define PROTOBUF_resp_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_resp_5fmessage_2eproto();
void protobuf_InitDefaults_resp_5fmessage_2eproto();
void protobuf_AssignDesc_resp_5fmessage_2eproto();
void protobuf_ShutdownFile_resp_5fmessage_2eproto();

class ConnectionResponse;

enum ConnectionResponse_ResponseCode {
  ConnectionResponse_ResponseCode_OK = 200,
  ConnectionResponse_ResponseCode_BadMessageFormatting = 400,
  ConnectionResponse_ResponseCode_UnknownService = 404,
  ConnectionResponse_ResponseCode_NotSupportedVersion = 405,
  ConnectionResponse_ResponseCode_Timeout = 408,
  ConnectionResponse_ResponseCode_ProtocolError = 410,
  ConnectionResponse_ResponseCode_InternalError = 500
};
bool ConnectionResponse_ResponseCode_IsValid(int value);
const ConnectionResponse_ResponseCode ConnectionResponse_ResponseCode_ResponseCode_MIN = ConnectionResponse_ResponseCode_OK;
const ConnectionResponse_ResponseCode ConnectionResponse_ResponseCode_ResponseCode_MAX = ConnectionResponse_ResponseCode_InternalError;
const int ConnectionResponse_ResponseCode_ResponseCode_ARRAYSIZE = ConnectionResponse_ResponseCode_ResponseCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectionResponse_ResponseCode_descriptor();
inline const ::std::string& ConnectionResponse_ResponseCode_Name(ConnectionResponse_ResponseCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectionResponse_ResponseCode_descriptor(), value);
}
inline bool ConnectionResponse_ResponseCode_Parse(
    const ::std::string& name, ConnectionResponse_ResponseCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectionResponse_ResponseCode>(
    ConnectionResponse_ResponseCode_descriptor(), name, value);
}
// ===================================================================

class ConnectionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectionResponse) */ {
 public:
  ConnectionResponse();
  virtual ~ConnectionResponse();

  ConnectionResponse(const ConnectionResponse& from);

  inline ConnectionResponse& operator=(const ConnectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionResponse& default_instance();

  static const ConnectionResponse* internal_default_instance();

  void Swap(ConnectionResponse* other);

  // implements Message ----------------------------------------------

  inline ConnectionResponse* New() const { return New(NULL); }

  ConnectionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectionResponse& from);
  void MergeFrom(const ConnectionResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectionResponse* other);
  void UnsafeMergeFrom(const ConnectionResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ConnectionResponse_ResponseCode ResponseCode;
  static const ResponseCode OK =
    ConnectionResponse_ResponseCode_OK;
  static const ResponseCode BadMessageFormatting =
    ConnectionResponse_ResponseCode_BadMessageFormatting;
  static const ResponseCode UnknownService =
    ConnectionResponse_ResponseCode_UnknownService;
  static const ResponseCode NotSupportedVersion =
    ConnectionResponse_ResponseCode_NotSupportedVersion;
  static const ResponseCode Timeout =
    ConnectionResponse_ResponseCode_Timeout;
  static const ResponseCode ProtocolError =
    ConnectionResponse_ResponseCode_ProtocolError;
  static const ResponseCode InternalError =
    ConnectionResponse_ResponseCode_InternalError;
  static inline bool ResponseCode_IsValid(int value) {
    return ConnectionResponse_ResponseCode_IsValid(value);
  }
  static const ResponseCode ResponseCode_MIN =
    ConnectionResponse_ResponseCode_ResponseCode_MIN;
  static const ResponseCode ResponseCode_MAX =
    ConnectionResponse_ResponseCode_ResponseCode_MAX;
  static const int ResponseCode_ARRAYSIZE =
    ConnectionResponse_ResponseCode_ResponseCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseCode_descriptor() {
    return ConnectionResponse_ResponseCode_descriptor();
  }
  static inline const ::std::string& ResponseCode_Name(ResponseCode value) {
    return ConnectionResponse_ResponseCode_Name(value);
  }
  static inline bool ResponseCode_Parse(const ::std::string& name,
      ResponseCode* value) {
    return ConnectionResponse_ResponseCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ConnectionResponse.ResponseCode responseCode = 1;
  bool has_responsecode() const;
  void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  ::ConnectionResponse_ResponseCode responsecode() const;
  void set_responsecode(::ConnectionResponse_ResponseCode value);

  // required string sessionId = 2;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 2;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:ConnectionResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_message();
  inline void clear_has_message();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sessionid_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int responsecode_;
  friend void  protobuf_InitDefaults_resp_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_resp_5fmessage_2eproto_impl();
  friend void protobuf_AssignDesc_resp_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_resp_5fmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConnectionResponse> ConnectionResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectionResponse

// required .ConnectionResponse.ResponseCode responseCode = 1;
inline bool ConnectionResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectionResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectionResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectionResponse::clear_responsecode() {
  responsecode_ = 200;
  clear_has_responsecode();
}
inline ::ConnectionResponse_ResponseCode ConnectionResponse::responsecode() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.responseCode)
  return static_cast< ::ConnectionResponse_ResponseCode >(responsecode_);
}
inline void ConnectionResponse::set_responsecode(::ConnectionResponse_ResponseCode value) {
  assert(::ConnectionResponse_ResponseCode_IsValid(value));
  set_has_responsecode();
  responsecode_ = value;
  // @@protoc_insertion_point(field_set:ConnectionResponse.responseCode)
}

// required string sessionId = 2;
inline bool ConnectionResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectionResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectionResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectionResponse::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
inline const ::std::string& ConnectionResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionResponse::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionResponse.sessionId)
}
inline void ConnectionResponse::set_sessionid(const char* value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionResponse.sessionId)
}
inline void ConnectionResponse::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionResponse.sessionId)
}
inline ::std::string* ConnectionResponse::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:ConnectionResponse.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectionResponse::release_sessionid() {
  // @@protoc_insertion_point(field_release:ConnectionResponse.sessionId)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionResponse::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:ConnectionResponse.sessionId)
}

// optional string message = 3;
inline bool ConnectionResponse::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConnectionResponse::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConnectionResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConnectionResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& ConnectionResponse::message() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionResponse.message)
}
inline void ConnectionResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionResponse.message)
}
inline void ConnectionResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionResponse.message)
}
inline ::std::string* ConnectionResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:ConnectionResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectionResponse::release_message() {
  // @@protoc_insertion_point(field_release:ConnectionResponse.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ConnectionResponse.message)
}

inline const ConnectionResponse* ConnectionResponse::internal_default_instance() {
  return &ConnectionResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ConnectionResponse_ResponseCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConnectionResponse_ResponseCode>() {
  return ::ConnectionResponse_ResponseCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_resp_5fmessage_2eproto__INCLUDED
