// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resp_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "resp_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ConnectionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectionResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ConnectionResponse_ResponseCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_resp_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_resp_5fmessage_2eproto() {
  protobuf_AddDesc_resp_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "resp_message.proto");
  GOOGLE_CHECK(file != NULL);
  ConnectionResponse_descriptor_ = file->message_type(0);
  static const int ConnectionResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionResponse, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionResponse, message_),
  };
  ConnectionResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectionResponse_descriptor_,
      ConnectionResponse::internal_default_instance(),
      ConnectionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionResponse, _has_bits_),
      -1,
      -1,
      sizeof(ConnectionResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionResponse, _internal_metadata_));
  ConnectionResponse_ResponseCode_descriptor_ = ConnectionResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_resp_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectionResponse_descriptor_, ConnectionResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_resp_5fmessage_2eproto() {
  ConnectionResponse_default_instance_.Shutdown();
  delete ConnectionResponse_reflection_;
}

void protobuf_InitDefaults_resp_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ConnectionResponse_default_instance_.DefaultConstruct();
  ConnectionResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_resp_5fmessage_2eproto_once_);
void protobuf_InitDefaults_resp_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_resp_5fmessage_2eproto_once_,
                 &protobuf_InitDefaults_resp_5fmessage_2eproto_impl);
}
void protobuf_AddDesc_resp_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_resp_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022resp_message.proto\"\212\002\n\022ConnectionRespo"
    "nse\0226\n\014responseCode\030\001 \002(\0162 .ConnectionRe"
    "sponse.ResponseCode\022\021\n\tsessionId\030\002 \002(\t\022\017"
    "\n\007message\030\003 \001(\t\"\227\001\n\014ResponseCode\022\007\n\002OK\020\310"
    "\001\022\031\n\024BadMessageFormatting\020\220\003\022\023\n\016UnknownS"
    "ervice\020\224\003\022\030\n\023NotSupportedVersion\020\225\003\022\014\n\007T"
    "imeout\020\230\003\022\022\n\rProtocolError\020\232\003\022\022\n\rInterna"
    "lError\020\364\003", 289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resp_message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_resp_5fmessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_resp_5fmessage_2eproto_once_);
void protobuf_AddDesc_resp_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_resp_5fmessage_2eproto_once_,
                 &protobuf_AddDesc_resp_5fmessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_resp_5fmessage_2eproto {
  StaticDescriptorInitializer_resp_5fmessage_2eproto() {
    protobuf_AddDesc_resp_5fmessage_2eproto();
  }
} static_descriptor_initializer_resp_5fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ConnectionResponse_ResponseCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectionResponse_ResponseCode_descriptor_;
}
bool ConnectionResponse_ResponseCode_IsValid(int value) {
  switch (value) {
    case 200:
    case 400:
    case 404:
    case 405:
    case 408:
    case 410:
    case 500:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ConnectionResponse_ResponseCode ConnectionResponse::OK;
const ConnectionResponse_ResponseCode ConnectionResponse::BadMessageFormatting;
const ConnectionResponse_ResponseCode ConnectionResponse::UnknownService;
const ConnectionResponse_ResponseCode ConnectionResponse::NotSupportedVersion;
const ConnectionResponse_ResponseCode ConnectionResponse::Timeout;
const ConnectionResponse_ResponseCode ConnectionResponse::ProtocolError;
const ConnectionResponse_ResponseCode ConnectionResponse::InternalError;
const ConnectionResponse_ResponseCode ConnectionResponse::ResponseCode_MIN;
const ConnectionResponse_ResponseCode ConnectionResponse::ResponseCode_MAX;
const int ConnectionResponse::ResponseCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionResponse::kResponseCodeFieldNumber;
const int ConnectionResponse::kSessionIdFieldNumber;
const int ConnectionResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionResponse::ConnectionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_resp_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectionResponse)
}

void ConnectionResponse::InitAsDefaultInstance() {
}

ConnectionResponse::ConnectionResponse(const ConnectionResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConnectionResponse)
}

void ConnectionResponse::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  responsecode_ = 200;
}

ConnectionResponse::~ConnectionResponse() {
  // @@protoc_insertion_point(destructor:ConnectionResponse)
  SharedDtor();
}

void ConnectionResponse::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectionResponse_descriptor_;
}

const ConnectionResponse& ConnectionResponse::default_instance() {
  protobuf_InitDefaults_resp_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConnectionResponse> ConnectionResponse_default_instance_;

ConnectionResponse* ConnectionResponse::New(::google::protobuf::Arena* arena) const {
  ConnectionResponse* n = new ConnectionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectionResponse)
  if (_has_bits_[0 / 32] & 7u) {
    responsecode_ = 200;
    if (has_sessionid()) {
      sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_message()) {
      message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConnectionResponse.ResponseCode responseCode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ConnectionResponse_ResponseCode_IsValid(value)) {
            set_responsecode(static_cast< ::ConnectionResponse_ResponseCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sessionId;
        break;
      }

      // required string sessionId = 2;
      case 2: {
        if (tag == 18) {
         parse_sessionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ConnectionResponse.sessionId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ConnectionResponse.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectionResponse)
  return false;
#undef DO_
}

void ConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectionResponse)
  // required .ConnectionResponse.ResponseCode responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->responsecode(), output);
  }

  // required string sessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ConnectionResponse.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  // optional string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ConnectionResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectionResponse)
}

::google::protobuf::uint8* ConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectionResponse)
  // required .ConnectionResponse.ResponseCode responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->responsecode(), target);
  }

  // required string sessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ConnectionResponse.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // optional string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ConnectionResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectionResponse)
  return target;
}

size_t ConnectionResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ConnectionResponse)
  size_t total_size = 0;

  if (has_responsecode()) {
    // required .ConnectionResponse.ResponseCode responseCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->responsecode());
  }

  if (has_sessionid()) {
    // required string sessionId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  return total_size;
}
size_t ConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectionResponse)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ConnectionResponse.ResponseCode responseCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->responsecode());

    // required string sessionId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string message = 3;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConnectionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectionResponse)
    UnsafeMergeFrom(*source);
  }
}

void ConnectionResponse::MergeFrom(const ConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectionResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConnectionResponse::UnsafeMergeFrom(const ConnectionResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_sessionid()) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ConnectionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionResponse::CopyFrom(const ConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectionResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConnectionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ConnectionResponse::Swap(ConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionResponse::InternalSwap(ConnectionResponse* other) {
  std::swap(responsecode_, other->responsecode_);
  sessionid_.Swap(&other->sessionid_);
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectionResponse_descriptor_;
  metadata.reflection = ConnectionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectionResponse

// required .ConnectionResponse.ResponseCode responseCode = 1;
bool ConnectionResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConnectionResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
void ConnectionResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConnectionResponse::clear_responsecode() {
  responsecode_ = 200;
  clear_has_responsecode();
}
::ConnectionResponse_ResponseCode ConnectionResponse::responsecode() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.responseCode)
  return static_cast< ::ConnectionResponse_ResponseCode >(responsecode_);
}
void ConnectionResponse::set_responsecode(::ConnectionResponse_ResponseCode value) {
  assert(::ConnectionResponse_ResponseCode_IsValid(value));
  set_has_responsecode();
  responsecode_ = value;
  // @@protoc_insertion_point(field_set:ConnectionResponse.responseCode)
}

// required string sessionId = 2;
bool ConnectionResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConnectionResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
void ConnectionResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConnectionResponse::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& ConnectionResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionResponse::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionResponse.sessionId)
}
void ConnectionResponse::set_sessionid(const char* value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionResponse.sessionId)
}
void ConnectionResponse::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionResponse.sessionId)
}
::std::string* ConnectionResponse::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:ConnectionResponse.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionResponse::release_sessionid() {
  // @@protoc_insertion_point(field_release:ConnectionResponse.sessionId)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionResponse::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:ConnectionResponse.sessionId)
}

// optional string message = 3;
bool ConnectionResponse::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ConnectionResponse::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
void ConnectionResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
void ConnectionResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& ConnectionResponse::message() const {
  // @@protoc_insertion_point(field_get:ConnectionResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionResponse.message)
}
void ConnectionResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionResponse.message)
}
void ConnectionResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionResponse.message)
}
::std::string* ConnectionResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:ConnectionResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionResponse::release_message() {
  // @@protoc_insertion_point(field_release:ConnectionResponse.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ConnectionResponse.message)
}

inline const ConnectionResponse* ConnectionResponse::internal_default_instance() {
  return &ConnectionResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
