// Examples.cpp: определяет точку входа для консольного приложения.
//

#include <string>
#include <iostream>

using namespace std;

class obj {
private:
	string str;
public:
	obj() {
		cout << "Def constr" << endl;
		str = "";
	}
	obj(string _str) {
		str = _str;
		cout << "Constr obj: " << str << endl;
	}
	~obj() {
		cout << "Destr obj: " << str << endl;
		str = "";
	}
	friend ostream& operator<<(ostream&, obj&);
};
ostream& operator<<(ostream& ost, obj& _obj) {
	return (ost << _obj.str);
}

class mycontain {
private:
	obj* con;
	int size;
public:
	mycontain() {
		con = nullptr;
		size = 0;
	}
	~mycontain() {
		cout << "CALLED DESTR CONTAIN" << endl;
		if (con) {
			delete[] con;
		}
	}
	void push_back(obj* _obj) {
		if (con == nullptr) {
			con = new obj[1];
			con[0] = *_obj;
			size++;
		}
		else
		{
			obj* con_old = new obj[size];
			for (int i = 0; i < size; i++) {
				con_old[i] = con[i];
				
			}
			con = nullptr;
			size++;
			con = new obj[size];
			for (int j = 0; j < (size - 1); j++) {
				con[j] = con_old[j];
			}
			con[size - 1] = *_obj;
			delete con_old;       //ERRRRRRRRRRRRRRRRRRRROR
			con_old = nullptr;
		}
	}
	int contain_size() {
		return size;
	}
	obj *get(int i) {
		if (con) {
			return &con[i - 1];
		}
		else
			return nullptr;
	}
};

int main()
{
	mycontain cont;
	
	obj ob1("1 obj");
	obj ob2("2 obj");
	obj ob3("3 obj");

	cont.push_back(&ob1);
	cont.push_back(&ob2);
	cont.push_back(&ob3);

	cout << *cont.get(1) << endl << *cont.get(2) << endl << *cont.get(3) << endl;
    return 0;
}

